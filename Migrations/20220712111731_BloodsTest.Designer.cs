// <auto-generated />
using System;
using IntakeTrackerApp.DataManagement;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IntakeTrackerApp.Migrations
{
    [DbContext(typeof(PatientsContext))]
    [Migration("20220712111731_BloodsTest")]
    partial class BloodsTest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0-preview.7.21378.4");

            modelBuilder.Entity("IntakeTrackerApp.DataManagement.PatientReferral", b =>
                {
                    b.Property<ulong>("NHSNumberKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActiveReferralActions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Archived")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BloodTestResults")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BriefDetails")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ConsultantClinicPlan")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOnReferral")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateReferralReceived")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double?>("Height")
                        .HasColumnType("REAL");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LocalHospitalNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("MedicalAppointmentNeeded")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("NursingAppointmentNeeded")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NursingClinicPlan")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PreferredContactMethod")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("PreviousCorrespondenceNeeded")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PreviousCorrespondenceSummary")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReferralType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ResponsibleOfActiveManagement")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TransferRegion")
                        .HasColumnType("TEXT");

                    b.Property<long>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("NHSNumberKey");

                    b.ToTable("patientReferrals");
                });

            modelBuilder.Entity("IntakeTrackerApp.DataManagement.PatientReferral", b =>
                {
                    b.OwnsOne("IntakeTrackerApp.DataManagement.Test", "Bloods", b1 =>
                        {
                            b1.Property<ulong>("PatientReferralNHSNumberKey")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<bool?>("Needed")
                                .HasColumnType("INTEGER");

                            b1.HasKey("PatientReferralNHSNumberKey");

                            b1.ToTable("patientReferrals");

                            b1.WithOwner()
                                .HasForeignKey("PatientReferralNHSNumberKey");

                            b1.OwnsOne("IntakeTrackerApp.DataManagement.DateRecord", "ReportedDate", b2 =>
                                {
                                    b2.Property<ulong>("TestPatientReferralNHSNumberKey")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Comment")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.Property<DateTime?>("Date")
                                        .HasColumnType("Date");

                                    b2.HasKey("TestPatientReferralNHSNumberKey");

                                    b2.ToTable("patientReferrals");

                                    b2.WithOwner()
                                        .HasForeignKey("TestPatientReferralNHSNumberKey");
                                });

                            b1.OwnsOne("IntakeTrackerApp.DataManagement.DateRecord", "RequestedDate", b2 =>
                                {
                                    b2.Property<ulong>("TestPatientReferralNHSNumberKey")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Comment")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.Property<DateTime?>("Date")
                                        .HasColumnType("Date");

                                    b2.HasKey("TestPatientReferralNHSNumberKey");

                                    b2.ToTable("patientReferrals");

                                    b2.WithOwner()
                                        .HasForeignKey("TestPatientReferralNHSNumberKey");
                                });

                            b1.OwnsOne("IntakeTrackerApp.DataManagement.DateRecord", "TestDate", b2 =>
                                {
                                    b2.Property<ulong>("TestPatientReferralNHSNumberKey")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Comment")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.Property<DateTime?>("Date")
                                        .HasColumnType("Date");

                                    b2.HasKey("TestPatientReferralNHSNumberKey");

                                    b2.ToTable("patientReferrals");

                                    b2.WithOwner()
                                        .HasForeignKey("TestPatientReferralNHSNumberKey");
                                });

                            b1.Navigation("ReportedDate")
                                .IsRequired();

                            b1.Navigation("RequestedDate")
                                .IsRequired();

                            b1.Navigation("TestDate")
                                .IsRequired();
                        });

                    b.OwnsOne("IntakeTrackerApp.DataManagement.DateRecord", "ContactAttempted", b1 =>
                        {
                            b1.Property<ulong>("PatientReferralNHSNumberKey")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Comment")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<DateTime?>("Date")
                                .HasColumnType("Date");

                            b1.HasKey("PatientReferralNHSNumberKey");

                            b1.ToTable("patientReferrals");

                            b1.WithOwner()
                                .HasForeignKey("PatientReferralNHSNumberKey");
                        });

                    b.OwnsOne("IntakeTrackerApp.DataManagement.DateRecord", "DateContactMade", b1 =>
                        {
                            b1.Property<ulong>("PatientReferralNHSNumberKey")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Comment")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<DateTime?>("Date")
                                .HasColumnType("Date");

                            b1.HasKey("PatientReferralNHSNumberKey");

                            b1.ToTable("patientReferrals");

                            b1.WithOwner()
                                .HasForeignKey("PatientReferralNHSNumberKey");
                        });

                    b.OwnsOne("IntakeTrackerApp.DataManagement.DateRecord", "DateOfActiveManagement", b1 =>
                        {
                            b1.Property<ulong>("PatientReferralNHSNumberKey")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Comment")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<DateTime?>("Date")
                                .HasColumnType("Date");

                            b1.HasKey("PatientReferralNHSNumberKey");

                            b1.ToTable("patientReferrals");

                            b1.WithOwner()
                                .HasForeignKey("PatientReferralNHSNumberKey");
                        });

                    b.OwnsOne("IntakeTrackerApp.DataManagement.Test", "EP", b1 =>
                        {
                            b1.Property<ulong>("PatientReferralNHSNumberKey")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<bool?>("Needed")
                                .HasColumnType("INTEGER");

                            b1.HasKey("PatientReferralNHSNumberKey");

                            b1.ToTable("patientReferrals");

                            b1.WithOwner()
                                .HasForeignKey("PatientReferralNHSNumberKey");

                            b1.OwnsOne("IntakeTrackerApp.DataManagement.DateRecord", "ReportedDate", b2 =>
                                {
                                    b2.Property<ulong>("TestPatientReferralNHSNumberKey")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Comment")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.Property<DateTime?>("Date")
                                        .HasColumnType("Date");

                                    b2.HasKey("TestPatientReferralNHSNumberKey");

                                    b2.ToTable("patientReferrals");

                                    b2.WithOwner()
                                        .HasForeignKey("TestPatientReferralNHSNumberKey");
                                });

                            b1.OwnsOne("IntakeTrackerApp.DataManagement.DateRecord", "RequestedDate", b2 =>
                                {
                                    b2.Property<ulong>("TestPatientReferralNHSNumberKey")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Comment")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.Property<DateTime?>("Date")
                                        .HasColumnType("Date");

                                    b2.HasKey("TestPatientReferralNHSNumberKey");

                                    b2.ToTable("patientReferrals");

                                    b2.WithOwner()
                                        .HasForeignKey("TestPatientReferralNHSNumberKey");
                                });

                            b1.OwnsOne("IntakeTrackerApp.DataManagement.DateRecord", "TestDate", b2 =>
                                {
                                    b2.Property<ulong>("TestPatientReferralNHSNumberKey")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Comment")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.Property<DateTime?>("Date")
                                        .HasColumnType("Date");

                                    b2.HasKey("TestPatientReferralNHSNumberKey");

                                    b2.ToTable("patientReferrals");

                                    b2.WithOwner()
                                        .HasForeignKey("TestPatientReferralNHSNumberKey");
                                });

                            b1.Navigation("ReportedDate")
                                .IsRequired();

                            b1.Navigation("RequestedDate")
                                .IsRequired();

                            b1.Navigation("TestDate")
                                .IsRequired();
                        });

                    b.OwnsOne("IntakeTrackerApp.DataManagement.Test", "LP", b1 =>
                        {
                            b1.Property<ulong>("PatientReferralNHSNumberKey")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<bool?>("Needed")
                                .HasColumnType("INTEGER");

                            b1.HasKey("PatientReferralNHSNumberKey");

                            b1.ToTable("patientReferrals");

                            b1.WithOwner()
                                .HasForeignKey("PatientReferralNHSNumberKey");

                            b1.OwnsOne("IntakeTrackerApp.DataManagement.DateRecord", "ReportedDate", b2 =>
                                {
                                    b2.Property<ulong>("TestPatientReferralNHSNumberKey")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Comment")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.Property<DateTime?>("Date")
                                        .HasColumnType("Date");

                                    b2.HasKey("TestPatientReferralNHSNumberKey");

                                    b2.ToTable("patientReferrals");

                                    b2.WithOwner()
                                        .HasForeignKey("TestPatientReferralNHSNumberKey");
                                });

                            b1.OwnsOne("IntakeTrackerApp.DataManagement.DateRecord", "RequestedDate", b2 =>
                                {
                                    b2.Property<ulong>("TestPatientReferralNHSNumberKey")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Comment")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.Property<DateTime?>("Date")
                                        .HasColumnType("Date");

                                    b2.HasKey("TestPatientReferralNHSNumberKey");

                                    b2.ToTable("patientReferrals");

                                    b2.WithOwner()
                                        .HasForeignKey("TestPatientReferralNHSNumberKey");
                                });

                            b1.OwnsOne("IntakeTrackerApp.DataManagement.DateRecord", "TestDate", b2 =>
                                {
                                    b2.Property<ulong>("TestPatientReferralNHSNumberKey")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Comment")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.Property<DateTime?>("Date")
                                        .HasColumnType("Date");

                                    b2.HasKey("TestPatientReferralNHSNumberKey");

                                    b2.ToTable("patientReferrals");

                                    b2.WithOwner()
                                        .HasForeignKey("TestPatientReferralNHSNumberKey");
                                });

                            b1.Navigation("ReportedDate")
                                .IsRequired();

                            b1.Navigation("RequestedDate")
                                .IsRequired();

                            b1.Navigation("TestDate")
                                .IsRequired();
                        });

                    b.OwnsOne("IntakeTrackerApp.DataManagement.Test", "MRI", b1 =>
                        {
                            b1.Property<ulong>("PatientReferralNHSNumberKey")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<bool?>("Needed")
                                .HasColumnType("INTEGER");

                            b1.HasKey("PatientReferralNHSNumberKey");

                            b1.ToTable("patientReferrals");

                            b1.WithOwner()
                                .HasForeignKey("PatientReferralNHSNumberKey");

                            b1.OwnsOne("IntakeTrackerApp.DataManagement.DateRecord", "ReportedDate", b2 =>
                                {
                                    b2.Property<ulong>("TestPatientReferralNHSNumberKey")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Comment")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.Property<DateTime?>("Date")
                                        .HasColumnType("Date");

                                    b2.HasKey("TestPatientReferralNHSNumberKey");

                                    b2.ToTable("patientReferrals");

                                    b2.WithOwner()
                                        .HasForeignKey("TestPatientReferralNHSNumberKey");
                                });

                            b1.OwnsOne("IntakeTrackerApp.DataManagement.DateRecord", "RequestedDate", b2 =>
                                {
                                    b2.Property<ulong>("TestPatientReferralNHSNumberKey")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Comment")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.Property<DateTime?>("Date")
                                        .HasColumnType("Date");

                                    b2.HasKey("TestPatientReferralNHSNumberKey");

                                    b2.ToTable("patientReferrals");

                                    b2.WithOwner()
                                        .HasForeignKey("TestPatientReferralNHSNumberKey");
                                });

                            b1.OwnsOne("IntakeTrackerApp.DataManagement.DateRecord", "TestDate", b2 =>
                                {
                                    b2.Property<ulong>("TestPatientReferralNHSNumberKey")
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("Comment")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.Property<DateTime?>("Date")
                                        .HasColumnType("Date");

                                    b2.HasKey("TestPatientReferralNHSNumberKey");

                                    b2.ToTable("patientReferrals");

                                    b2.WithOwner()
                                        .HasForeignKey("TestPatientReferralNHSNumberKey");
                                });

                            b1.Navigation("ReportedDate")
                                .IsRequired();

                            b1.Navigation("RequestedDate")
                                .IsRequired();

                            b1.Navigation("TestDate")
                                .IsRequired();
                        });

                    b.OwnsOne("IntakeTrackerApp.DataManagement.DateRecord", "MedicalAppointment", b1 =>
                        {
                            b1.Property<ulong>("PatientReferralNHSNumberKey")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Comment")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<DateTime?>("Date")
                                .HasColumnType("Date");

                            b1.HasKey("PatientReferralNHSNumberKey");

                            b1.ToTable("patientReferrals");

                            b1.WithOwner()
                                .HasForeignKey("PatientReferralNHSNumberKey");
                        });

                    b.OwnsOne("IntakeTrackerApp.DataManagement.DateRecord", "NursingAppointment", b1 =>
                        {
                            b1.Property<ulong>("PatientReferralNHSNumberKey")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Comment")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<DateTime?>("Date")
                                .HasColumnType("Date");

                            b1.HasKey("PatientReferralNHSNumberKey");

                            b1.ToTable("patientReferrals");

                            b1.WithOwner()
                                .HasForeignKey("PatientReferralNHSNumberKey");
                        });

                    b.OwnsOne("IntakeTrackerApp.DataManagement.DateRecord", "PreviousCorrespondenceReceived", b1 =>
                        {
                            b1.Property<ulong>("PatientReferralNHSNumberKey")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Comment")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<DateTime?>("Date")
                                .HasColumnType("Date");

                            b1.HasKey("PatientReferralNHSNumberKey");

                            b1.ToTable("patientReferrals");

                            b1.WithOwner()
                                .HasForeignKey("PatientReferralNHSNumberKey");
                        });

                    b.OwnsOne("IntakeTrackerApp.DataManagement.DateRecord", "PreviousCorrespondenceRequested", b1 =>
                        {
                            b1.Property<ulong>("PatientReferralNHSNumberKey")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Comment")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<DateTime?>("Date")
                                .HasColumnType("Date");

                            b1.HasKey("PatientReferralNHSNumberKey");

                            b1.ToTable("patientReferrals");

                            b1.WithOwner()
                                .HasForeignKey("PatientReferralNHSNumberKey");
                        });

                    b.OwnsOne("IntakeTrackerApp.DataManagement.DateRecord", "ProvisinalNursingClinic", b1 =>
                        {
                            b1.Property<ulong>("PatientReferralNHSNumberKey")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Comment")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<DateTime?>("Date")
                                .HasColumnType("Date");

                            b1.HasKey("PatientReferralNHSNumberKey");

                            b1.ToTable("patientReferrals");

                            b1.WithOwner()
                                .HasForeignKey("PatientReferralNHSNumberKey");
                        });

                    b.OwnsOne("IntakeTrackerApp.DataManagement.DateRecord", "ProvisionalConsultantClinic", b1 =>
                        {
                            b1.Property<ulong>("PatientReferralNHSNumberKey")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Comment")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<DateTime?>("Date")
                                .HasColumnType("Date");

                            b1.HasKey("PatientReferralNHSNumberKey");

                            b1.ToTable("patientReferrals");

                            b1.WithOwner()
                                .HasForeignKey("PatientReferralNHSNumberKey");
                        });

                    b.Navigation("Bloods")
                        .IsRequired();

                    b.Navigation("ContactAttempted")
                        .IsRequired();

                    b.Navigation("DateContactMade")
                        .IsRequired();

                    b.Navigation("DateOfActiveManagement")
                        .IsRequired();

                    b.Navigation("EP")
                        .IsRequired();

                    b.Navigation("LP")
                        .IsRequired();

                    b.Navigation("MRI")
                        .IsRequired();

                    b.Navigation("MedicalAppointment")
                        .IsRequired();

                    b.Navigation("NursingAppointment")
                        .IsRequired();

                    b.Navigation("PreviousCorrespondenceReceived")
                        .IsRequired();

                    b.Navigation("PreviousCorrespondenceRequested")
                        .IsRequired();

                    b.Navigation("ProvisinalNursingClinic")
                        .IsRequired();

                    b.Navigation("ProvisionalConsultantClinic")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
