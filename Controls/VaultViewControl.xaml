<UserControl x:Class="IntakeTrackerApp.Controls.VaultViewControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:IntakeTrackerApp.Controls"
             xmlns:filter="clr-namespace:IntakeTrackerApp.DataManagement.Filtering"
             mc:Ignorable="d" 
              d:DataContext="{d:DesignInstance Type=local:VaultViewControl}"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="cBoolToVis"/>


        <DataTemplate x:Key="SearchableHeaderTemplate" DataType="{x:Type filter:PrefixFilter}">
            <StackPanel> 

				<TextBlock Text="{Binding Title}"/>
				<TextBox MinWidth="50" Grid.Row="1" Text="{Binding Path=Prefix.Item ,UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>
        </DataTemplate>

    </UserControl.Resources>

    <UserControl.CommandBindings>
        <CommandBinding Command="{x:Static local:VaultViewControl.NewReferralCmd}" Executed="NewReferral_Executed" />
        <CommandBinding Command="{x:Static local:VaultViewControl.OpenMRICommand}" Executed="OpenMRI_Executed" CanExecute="OpenMRI_CanExecute" />
        <CommandBinding Command="{x:Static local:VaultViewControl.OpenEPCommand}" Executed="OpenEP_Executed" CanExecute="OpenEP_CanExecute" />
        <CommandBinding Command="{x:Static local:VaultViewControl.OpenLPCommand}" Executed="OpenLP_Executed" CanExecute="OpenLP_CanExecute" />
        <CommandBinding Command="{x:Static local:VaultViewControl.OpenBloodsCommand}" Executed="OpenBloods_Executed" CanExecute="OpenBloods_CanExecute" />

        <CommandBinding Command="{x:Static local:VaultViewControl.ImportCommand}" Executed="Import_Executed" />
        <CommandBinding Command="{x:Static local:VaultViewControl.ExportCommand}" Executed="Export_Executed" />
		<CommandBinding Command="{x:Static local:VaultViewControl.OpenFileExplorerCommand}" Executed="OpenFileExplorerCommand_Executed" />
		<CommandBinding Command="{x:Static local:VaultViewControl.SettingsCommand}" Executed="OpenSettings_Executed" />
		<CommandBinding Command="Save" Executed="Save_Executed" />

    </UserControl.CommandBindings>

    <UserControl.InputBindings>
        <KeyBinding Key="N" Modifiers="Control" Command="{x:Static local:VaultViewControl.NewReferralCmd}"/>
        <KeyBinding Key="S" Modifiers="Control" Command="Save"/>
        <KeyBinding Key="Z" Modifiers="Control" Command="{Binding UndoCommand}"/>
        <KeyBinding Key="Y" Modifiers="Control" Command="{Binding RedoCommand}"/>
    </UserControl.InputBindings>

    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_New Referral" InputGestureText="Ctrl+N" Command="{x:Static local:VaultViewControl.NewReferralCmd}" />
                <MenuItem Header="_Save" InputGestureText="Ctrl+S" Command="Save"/>
                <MenuItem Header="_Undo" Command="{Binding UndoCommand}" />
                <MenuItem Header="_Redo" Command="{Binding RedoCommand}" />

                <MenuItem Header="Include _Archive" IsCheckable="true" IsChecked="{Binding IncludeArchived}"/>

                <Separator/>

                <MenuItem Header="_Import Data" Command="{x:Static local:VaultViewControl.ImportCommand}" />
                <MenuItem Header="E_xport Data" Command="{x:Static local:VaultViewControl.ExportCommand}" />
                <MenuItem Header="Open in File Explorer" Command="{x:Static local:VaultViewControl.OpenFileExplorerCommand}" />

                <Separator/>

                <MenuItem Header="S_ettings" Command="{x:Static local:VaultViewControl.SettingsCommand}" />

            </MenuItem>
            <MenuItem Header="S_ummaries">
                <MenuItem Header="_MRI Summary" Command="{x:Static local:VaultViewControl.OpenMRICommand}" />
                <MenuItem Header="_EP Summary" Command="{x:Static local:VaultViewControl.OpenEPCommand}" />
                <MenuItem Header="_LP Summary" Command="{x:Static local:VaultViewControl.OpenLPCommand}" />
                <MenuItem Header="_Bloods Summary" Command="{x:Static local:VaultViewControl.OpenBloodsCommand}" />
            </MenuItem> 

            <MenuItem Header="_Debug" Visibility="{x:Static local:VaultViewControl.IsDebug}" >
                <MenuItem Header="_Crash Program" Click="Crash_Click"/>
                <MenuItem Header="_Simulate Concurrency Conflict" Click="Concurrency_Click"/>
                <MenuItem Header="_Add random referrals" Click="RandomReferrals_Click"/>
            </MenuItem>
        </Menu>


        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="379*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="84*"/>
                <ColumnDefinition Width="1132*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="25"/>
            </Grid.RowDefinitions>

            <GridSplitter Grid.Column="1" Grid.RowSpan="2" HorizontalAlignment="Center" ShowsPreview="True" Width="5"/>

            <Button Command="{x:Static local:VaultViewControl.NewReferralCmd}" Grid.Row="1" Content="New Referral"/>

			<ListView ScrollViewer.VerticalScrollBarVisibility="Visible"
				      ScrollViewer.HorizontalScrollBarVisibility="Hidden"
					  x:Name="PatientsList" ItemsSource="{Binding FilteredReferrals.View}" AlternationCount="2"
                      SelectionMode="Single" MouseDown="PatientsList_MouseDown" VirtualizingStackPanel.IsVirtualizing="True"
                      SelectedItem="{Binding Selected}" Grid.ColumnSpan="2" Margin="0,0,5,0" >

                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Archived}" Value="True">
                                <Setter Property="FontStyle" Value="Italic" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListView.ItemContainerStyle>

                <ListView.View>
                    <GridView AllowsColumnReorder="true" ColumnHeaderToolTip="Patient Information" >
                        <GridViewColumn DisplayMemberBinding="{Binding Path=LastName}">

                            <GridViewColumnHeader HorizontalContentAlignment="Stretch" Click="LastNameColumnHeader_Click" >
                                <ContentControl Content="{Binding LastNameColumn}"  ContentTemplate="{StaticResource SearchableHeaderTemplate}"  />
                            </GridViewColumnHeader>
                        </GridViewColumn>

                        <GridViewColumn DisplayMemberBinding="{Binding Path=FirstName}">
                            <GridViewColumnHeader HorizontalContentAlignment="Stretch" Click="FirstNameColumnHeader_Click">
                                <ContentControl  Content="{Binding FirstNameColumn}"  ContentTemplate="{StaticResource SearchableHeaderTemplate}" />
                            </GridViewColumnHeader>
                        </GridViewColumn>


                        <GridViewColumn>
                            <GridViewColumnHeader Click="ReferralRecievedColumnHeader_Click" HorizontalContentAlignment="Stretch">
                                Date Received
                            </GridViewColumnHeader>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock>
                                        <TextBlock.Text>
                                            <Binding Path="DateReferralReceived" StringFormat="d"/>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                   <!-- <GridViewColumn>
                            <GridViewColumnHeader HorizontalContentAlignment="Stretch">
                                Status
                            </GridViewColumnHeader>

                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding QuickStatus}" TextWrapping="Wrap"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>-->
                    </GridView>
                </ListView.View>
            </ListView>


            <TabControl Grid.Column="2" Grid.RowSpan="2" x:Name="TabScreen" Grid.ColumnSpan="2" />


        </Grid>
    </DockPanel>
</UserControl>
